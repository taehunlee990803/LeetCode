class Solution(object):
    def canPlaceFlowers(self, flowerbed, n):
        """
        :type flowerbed: List[int]
        :type n: int
        :rtype: bool
        """
        count = 0
        last = len(flowerbed)-1

        if len(flowerbed) == 1 and flowerbed[0] == 0:
            return True
        if len(flowerbed) == 2 and flowerbed[0] ==0 and flowerbed[1] == 0 and n == 1:
            return True
        if len(flowerbed) == 3 and flowerbed[0] == 0 and flowerbed[1] == 0 and flowerbed[2] == 0 and n == 2:
            return True

        
        for k in range(0,len(flowerbed)-2):
            if flowerbed[0] ==0 and flowerbed[1] == 0 and flowerbed[2] == 1:
                 count+=1
                 flowerbed[0] = 1
            elif flowerbed[0] ==0 and flowerbed[1] == 0 and flowerbed[2] == 0:
                 count+=1
                 flowerbed[0] = 1
            elif flowerbed[last] == 0 and flowerbed[last-1] == 0 and flowerbed[last-2] == 1:
                count+=1
                flowerbed[last] = 1
            elif (flowerbed[k] == 0 and flowerbed[k+1] == 0 and flowerbed[k+2] == 0):
                 count+=1
                 flowerbed[k+1] = 1
            



        if count >= n:
            return True
        else:
            return False
